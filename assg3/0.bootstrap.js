(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "../pkg/assg3.js":
/*!***********************!*\
  !*** ../pkg/assg3.js ***!
  \***********************/
/*! exports provided: connectFourMinimax, Disc, Board, DiscDrop, __wbindgen_number_new, __wbindgen_object_drop_ref, __wbg_new_ec28d6ba821801cb, __wbg_of_331b709428ad2380, __wbg_push_ffaa2df7422d3b4c, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"connectFourMinimax\", function() { return connectFourMinimax; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Disc\", function() { return Disc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Board\", function() { return Board; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DiscDrop\", function() { return DiscDrop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_number_new\", function() { return __wbindgen_number_new; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return __wbindgen_object_drop_ref; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_new_ec28d6ba821801cb\", function() { return __wbg_new_ec28d6ba821801cb; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_of_331b709428ad2380\", function() { return __wbg_of_331b709428ad2380; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_push_ffaa2df7422d3b4c\", function() { return __wbg_push_ffaa2df7422d3b4c; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony import */ var _assg3_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assg3_bg.wasm */ \"../pkg/assg3_bg.wasm\");\n\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? __webpack_require__(/*! util */ \"./node_modules/util/util.js\").TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== _assg3_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint8Memory0 = new Uint8Array(_assg3_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n/**\n* @param {Board} board\n* @param {number} player\n* @param {number} depth\n* @returns {DiscDrop | undefined}\n*/\nfunction connectFourMinimax(board, player, depth) {\n    _assertClass(board, Board);\n    var ret = _assg3_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"connectFourMinimax\"](board.ptr, player, depth);\n    return ret === 0 ? undefined : DiscDrop.__wrap(ret);\n}\n\n/**\n*/\nconst Disc = Object.freeze({ Yellow:0,Red:1, });\n/**\n*/\nclass Board {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Board.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        _assg3_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_board_free\"](ptr);\n    }\n    /**\n    * @param {number} width\n    * @param {number} height\n    */\n    constructor(width, height) {\n        var ret = _assg3_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"board_new\"](width, height);\n        return Board.__wrap(ret);\n    }\n    /**\n    * @returns {Array<any>}\n    */\n    get columns() {\n        var ret = _assg3_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"board_get_columns\"](this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @returns {Array<any> | undefined}\n    */\n    get fourInARow() {\n        var ret = _assg3_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"board_get_four_in_a_row\"](this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    get bound() {\n        var ret = _assg3_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"board_get_bound\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} index\n    * @param {number} disc\n    */\n    push(index, disc) {\n        _assg3_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"board_push\"](this.ptr, index, disc);\n    }\n    /**\n    * @param {number} index\n    * @returns {boolean}\n    */\n    isValidLocation(index) {\n        var ret = _assg3_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"board_isValidLocation\"](this.ptr, index);\n        return ret !== 0;\n    }\n    /**\n    * @param {number} player\n    * @returns {boolean}\n    */\n    checkForWin(player) {\n        var ret = _assg3_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"board_checkForWin\"](this.ptr, player);\n        return ret !== 0;\n    }\n}\n/**\n*/\nclass DiscDrop {\n\n    static __wrap(ptr) {\n        const obj = Object.create(DiscDrop.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        _assg3_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_discdrop_free\"](ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get column() {\n        var ret = _assg3_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_discdrop_column\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set column(arg0) {\n        _assg3_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_discdrop_column\"](this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get disc() {\n        var ret = _assg3_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_discdrop_disc\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set disc(arg0) {\n        _assg3_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_discdrop_disc\"](this.ptr, arg0);\n    }\n}\n\nconst __wbindgen_number_new = function(arg0) {\n    var ret = arg0;\n    return addHeapObject(ret);\n};\n\nconst __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nconst __wbg_new_ec28d6ba821801cb = function() {\n    var ret = new Array();\n    return addHeapObject(ret);\n};\n\nconst __wbg_of_331b709428ad2380 = function(arg0, arg1) {\n    var ret = Array.of(getObject(arg0), getObject(arg1));\n    return addHeapObject(ret);\n};\n\nconst __wbg_push_ffaa2df7422d3b4c = function(arg0, arg1) {\n    var ret = getObject(arg0).push(getObject(arg1));\n    return ret;\n};\n\nconst __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n\n//# sourceURL=webpack:///../pkg/assg3.js?");

/***/ }),

/***/ "../pkg/assg3_bg.wasm":
/*!****************************!*\
  !*** ../pkg/assg3_bg.wasm ***!
  \****************************/
/*! exports provided: memory, __wbg_board_free, board_new, board_get_columns, board_get_four_in_a_row, board_get_bound, board_push, board_isValidLocation, board_checkForWin, __wbg_discdrop_free, __wbg_get_discdrop_column, __wbg_set_discdrop_column, __wbg_get_discdrop_disc, __wbg_set_discdrop_disc, connectFourMinimax */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./assg3.js */ \"../pkg/assg3.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../pkg/assg3_bg.wasm?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src_gameManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/gameManager */ \"./src/gameManager.js\");\n\n\nconst gameManager = new _src_gameManager__WEBPACK_IMPORTED_MODULE_0__[\"GameManager\"]();\ngameManager.run();\n\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),

/***/ "./src/gameManager.js":
/*!****************************!*\
  !*** ./src/gameManager.js ***!
  \****************************/
/*! exports provided: GameManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GameManager\", function() { return GameManager; });\n/* harmony import */ var assg3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! assg3 */ \"../pkg/assg3.js\");\n/* harmony import */ var _view__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./view */ \"./src/view.js\");\n\n\n\nclass GameManager {\n    constructor() {\n        this.restart();\n        this.view = new _view__WEBPACK_IMPORTED_MODULE_1__[\"View\"](\n            this.board.columns.length,\n            this.board.bound,\n            this.render.bind(this)\n        );\n        this.yellowPlayer = this.setupHuman(assg3__WEBPACK_IMPORTED_MODULE_0__[\"Disc\"].Yellow);\n        this.redPlayer = this.setupAi(assg3__WEBPACK_IMPORTED_MODULE_0__[\"Disc\"].Red);\n    }\n\n    restart() {\n        this.board = new assg3__WEBPACK_IMPORTED_MODULE_0__[\"Board\"](7, 6);\n    }\n\n    setupHuman(color) {\n        return () => {\n            return new Promise(resolve => {\n                const fn = () => {\n                    const column = this.view.mouseColumnIndex;\n                    if(column !== undefined) {\n                        window.removeEventListener('mousedown', fn, false);\n                        this.view.dropPreview = undefined;\n                        resolve(column);\n                    }\n                }\n                this.view.dropPreview = color;\n                window.addEventListener('mousedown', fn);\n            });\n        };\n    }\n\n    setupAi(color) {\n        return () => {\n            return new Promise(async resolve => {\n                const move = await Object(assg3__WEBPACK_IMPORTED_MODULE_0__[\"connectFourMinimax\"])(this.board, color, 4).column;\n                await this.timeout(500);\n                resolve(move);\n            });\n        };\n    }\n\n    render() {\n        this.view.render(this.board);\n    }\n\n    tick() {\n        this.render();\n    }\n\n    async move(decisionFunction, color) {\n        do {\n            var move = await decisionFunction();\n        } while (!this.board.isValidLocation(move));\n        this.board.push(move, color);\n        this.view.calculateRipple(move);\n    }\n\n    timeout(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    async gameLoop() {\n        while(true) {\n            await this.move(this.yellowPlayer, assg3__WEBPACK_IMPORTED_MODULE_0__[\"Disc\"].Yellow);\n            if(this.board.checkForWin(assg3__WEBPACK_IMPORTED_MODULE_0__[\"Disc\"].Yellow)) {\n                break;\n            }\n            await this.move(this.redPlayer, assg3__WEBPACK_IMPORTED_MODULE_0__[\"Disc\"].Red);\n            if(this.board.checkForWin(assg3__WEBPACK_IMPORTED_MODULE_0__[\"Disc\"].Red)) {\n                break;\n            }\n        }\n    }\n\n    async run() {\n        setInterval(this.tick.bind(this), 1000 / 60);\n        this.gameLoop();\n    }\n}\n\n\n//# sourceURL=webpack:///./src/gameManager.js?");

/***/ }),

/***/ "./src/view.js":
/*!*********************!*\
  !*** ./src/view.js ***!
  \*********************/
/*! exports provided: View */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"View\", function() { return View; });\nclass View {\n    constructor(boardWidth, boardHeight, onViewChange = () => {}, onClick = () => {}) {\n        this.boardWidth = boardWidth;\n        this.boardHeight = boardHeight;\n        this.container = document.getElementById('container');\n        this.onViewChange = onViewChange;\n        this.startTime = performance.now();\n        this.ripples = [];\n\n        this.setUp();\n  \n        window.addEventListener('resize', () => {\n            const [child] = this.container.children;\n            if(child) {\n                this.container.removeChild(child)\n            }\n            this.setUp();\n            this.onViewChange();\n        });\n\n        window.addEventListener('mousedown', () => {\n            onClick();\n        });\n\n        window.addEventListener('mousemove', (event) => {\n            const { left } = this.context.canvas.getBoundingClientRect();\n            const position = Math.floor((event.x - left) / this.unitOnScreen);\n            this.mouseColumnIndex = position >= 0 && position < this.boardWidth ? position : undefined;\n        });\n    }\n  \n    setUp() {\n        const { width, height } = this.container.getBoundingClientRect()\n\n        const canvas = document.createElement('canvas');\n        this.container.appendChild(canvas);\n        this.context = canvas.getContext('2d');\n\n        this.unitOnScreen = Math.min(width / this.boardWidth, height / this.boardHeight);\n\n        canvas.setAttribute('width', this.unitOnScreen * this.boardWidth);\n        canvas.setAttribute('height', this.unitOnScreen * this.boardHeight);\n    }\n\n    calculateRipple(column) {\n        var ripple = []\n        const t0 = performance.now() - this.startTime;\n        const A = 10;\n        const w = 0.02;\n        const b = 0.1;\n        for(var x = 0; x < this.boardWidth; x++) {\n            const distance = Math.abs(x - column);\n            const dt = distance * 40;\n            const offset = t0 + dt;\n            const damp = (dt + 10) * 0.001;\n            \n            const rippleFunction = (t) => {\n                const tt = t - offset;\n                return t - t0 < dt ? 0 : A * Math.exp(-b * damp * tt) * Math.cos(w * tt - Math.PI/2);\n            };\n            ripple.push(rippleFunction);\n        }\n        this.ripples.push(ripple);\n    }\n\n    getRippleOffsets(time) {\n        var rippleOffsets = [];\n        for(var x = 0; x < this.boardWidth; x++) {\n            var rippleOffset = 0;\n            this.ripples.forEach((ripple) => {\n                rippleOffset += ripple[x](time);\n            });\n            rippleOffsets.push(rippleOffset);\n        }\n        return rippleOffsets;\n    }\n\n    render(board) {\n        this.context.clearRect(0, 0, this.context.canvas.width, this.context.canvas.height);\n\n        const discRadius = 0.4;\n\n        const time = performance.now() - this.startTime;\n        const rippleOffsets = this.getRippleOffsets(time);\n\n        board.columns.forEach((column, x) => {\n            const pointX = (x + 0.5) * this.unitOnScreen;\n\n            this.context.beginPath();\n            this.context.moveTo(pointX, 0.5 * this.unitOnScreen + rippleOffsets[x]);\n            this.context.lineTo(pointX, (this.boardHeight - 0.5) * this.unitOnScreen + rippleOffsets[x]);\n            this.context.strokeStyle = \"#ffffff\";\n            this.context.stroke();\n\n            column.forEach((disc, y) => {\n                this.context.beginPath();\n                this.context.arc(\n                    (x + 0.5) * this.unitOnScreen,\n                    (this.boardHeight - y - 0.5) * this.unitOnScreen + rippleOffsets[x],\n                    discRadius * this.unitOnScreen,\n                    0, 2 * Math.PI\n                );\n                this.context.fillStyle = disc == 0 ? '#ebdb34' : '#e74c3c';\n                this.context.fill();\n            });\n        });\n\n        if(this.dropPreview !== undefined && this.mouseColumnIndex !== undefined) {\n            this.context.beginPath();\n            this.context.arc(\n                (this.mouseColumnIndex + 0.5) * this.unitOnScreen,\n                (this.boardHeight - (board.columns[this.mouseColumnIndex].length) - 0.5) * this.unitOnScreen,\n                this.unitOnScreen / 2.5,\n                0, 2 * Math.PI\n            );\n            this.context.strokeStyle = this.dropPreview == 0 ? '#ebdb34' : '#e74c3c';\n            this.context.lineWidth = 2;\n            const circumference = Math.PI * this.unitOnScreen / 2.5;\n            this.context.setLineDash([circumference / 8, circumference / 8]);\n            this.context.lineDashOffset = time * 0.01;\n            this.context.stroke()\n            this.context.setLineDash([]);\n            this.context.lineWidth = 1;\n        }\n\n        if(board.fourInARow) {\n            const [position, direction] = board.fourInARow;\n            this.context.beginPath();\n            var x = position[0];\n            var y = position[1];\n            this.context.moveTo(\n                (x + 0.5) * this.unitOnScreen,\n                (this.boardHeight - 1 - y + 0.5) * this.unitOnScreen + rippleOffsets[x]\n            );\n            for(var i = 1; i < 4; i++) {\n                x += direction[0];\n                y += direction[1];\n                this.context.lineTo(\n                    (x + 0.5) * this.unitOnScreen,\n                    (this.boardHeight - 1 - y + 0.5) * this.unitOnScreen + rippleOffsets[x]\n                );\n            }\n            this.context.lineWidth = 2 * discRadius * this.unitOnScreen;\n            this.context.lineCap = 'round';\n            this.context.strokeStyle = board.columns[x][y] == 0 ? '#ebdb34' : '#e74c3c';\n            this.context.stroke();\n            this.context.lineWidth = 1;\n        }\n    }\n}\n\n\n//# sourceURL=webpack:///./src/view.js?");

/***/ })

}]);